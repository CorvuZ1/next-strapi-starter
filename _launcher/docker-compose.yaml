version: "3.3"

services:
  frontend:
    container_name: frontend
    build:
      context: ../frontend
      dockerfile: "../_launcher/${NODE_ENV}/Dockerfile.frontend"
    ports:
      - 3000:3000
    volumes:
      - ../frontend:/opt/app
      - /opt/app/node_modules
    networks:
      - strapi

  backend:
    container_name: backend
    depends_on:
      - database
    build:
      context: ../backend
      dockerfile: "../_launcher/${NODE_ENV}/Dockerfile.backend"
    restart: always
    ports:
      - 1337:1337
    volumes:
      - ../backend:/opt/app
    networks:
      - strapi
    environment:
      DATABASE_HOST: database
      DATABASE_CLIENT: postgres
      DATABASE_PORT: 5432
      DATABASE_SSL: "false"

  database:
    container_name: database
    image: postgres:14.1-alpine
    restart: always
    ports:
      - 5432:5432
    networks:
      - strapi
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}

  web:
    container_name: web
    image: nginx:latest
    restart: always
    depends_on:
      - backend
      - frontend
    networks:
      - strapi
    volumes:
      - ../web:/etc/nginx/conf.d
    ports:
      - 80:80

networks:
  strapi:
volumes:
  database:
    name: "database_volume"
